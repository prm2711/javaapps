package com.zilker.delegate;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.zilker.dao.FindCountry;
import com.zilker.dao.FindPlayerName;
import com.zilker.dao.FindTournamentName;
import com.zilker.dao.InsertData;
import com.zilker.dto.Match;

public class InsertDataDelegate {
	public boolean checkValidity(HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setContentType("text/html");
		String tourname = request.getParameter("tourname");
		String player1 = request.getParameter("player1");
		String player2 = request.getParameter("player2");
		String winner = request.getParameter("winner");
		String loser = request.getParameter("loser");
		String status = request.getParameter("status");
		String score = request.getParameter("score");
		String country1, country2;
		Match match = new Match();
		InsertData insertData = new InsertData();
		FindTournamentName findTour = new FindTournamentName();
		FindPlayerName findPlayer = new FindPlayerName();
		FindCountry findCountry = new FindCountry();
		int tour, play1, play2, win, lose;
		tour = findTour.retrieveTournamentID(tourname);
		play1 = findPlayer.retrievePlayerID(player1);
		play2 = findPlayer.retrievePlayerID(player2);
		win = findPlayer.retrievePlayerID(winner);
		lose = findPlayer.retrievePlayerID(loser);
		country1 = findCountry.retrieveCountry(play1);
		country2 = findCountry.retrieveCountry(play2);
		if (tour == -1) {
			response.getWriter().append("<h1>Enter valid Tournament</h1>");
			return false;
		} else if (play1 == -1 || play2 == -1 || win == -1 || lose == -1) {
			response.getWriter().append("<h1>Enter valid Player</h1>");
			return false;
		} else if (status.equals("Complete") == false && status.equals("Suspended") == false) {
			response.getWriter().append("<h1>Enter valid Status</h1>");
			return false;
		} else if (findCountry.compareCountry(country1, country2) == false) {
			response.getWriter().append("<h1>Both players are from same country</h1>");
			return false;
		} else {
			match.setTourId(tour);
			match.setPlay1Id(play1);
			match.setPlay2Id(play2);
			match.setWinner(win);
			match.setLoser(lose);
			match.setStatus(status);
			match.setScore(score);
			insertData.insertMatch(match);
			response.getWriter().append("<h1>Data inserted Successfully</h1>");
			return true;
		}

	}
}
